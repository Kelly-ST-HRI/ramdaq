/*
 * -------------------------------------------------
 *  Nextflow config file for running tests
 * -------------------------------------------------
 * Defines bundled input files and everything required
 * to run a fast and simple test. Use as follows:
 *   nextflow run nf-core/ramdaq -profile test,<docker/singularity>
 */

params {
  config_profile_name = 'Test profile'
  config_profile_description = 'Minimal test dataset to check pipeline function'

  // Limit resources so that this can run on GitHub Actions
  max_cpus = 2
  max_memory = 6.GB
  max_time = 48.h

  // Input data
  // TODO nf-core: Specify the paths to your test data on nf-core/test-datasets
  // TODO nf-core: Give any required params for the test so that command line flags are not needed
  single_end = false
  stranded = 'fr-firststrand'
  
  readPaths = [
    ['SRR8890408', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/mouse/stranded_PE/SRR8890408_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/mouse/stranded_PE/SRR8890408_2.100K.fastq.gz']],
    ['SRR8890409', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/mouse/stranded_PE/SRR8890409_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/mouse/stranded_PE/SRR8890409_2.100K.fastq.gz']],
    ['SRR8890410', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/mouse/stranded_PE/SRR8890410_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/mouse/stranded_PE/SRR8890410_2.100K.fastq.gz']],
    ['SRR8890411', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/mouse/stranded_PE/SRR8890411_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/mouse/stranded_PE/SRR8890411_2.100K.fastq.gz']],
    ['SRR8890414', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/mouse/stranded_PE/SRR8890414_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/mouse/stranded_PE/SRR8890414_2.100K.fastq.gz']],
    ['SRR8890415', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/mouse/stranded_PE/SRR8890415_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/mouse/stranded_PE/SRR8890415_2.100K.fastq.gz']],
    ['SRR8890416', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/mouse/stranded_PE/SRR8890416_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/mouse/stranded_PE/SRR8890416_2.100K.fastq.gz']],
    ['SRR8890417', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/mouse/stranded_PE/SRR8890417_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/mouse/stranded_PE/SRR8890417_2.100K.fastq.gz']],
  ]
  
  // Genome references
  adapter = 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_annotation/mouse/all_sequencing_WTA_adopters.fa'
  hisat2_idx = 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_annotation/mouse/hisat2_v220_index_GRCm38_primary_ERCC.tar.gz'
  chrsize = 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_annotation/mouse/GRCm38.primary_assembly.genome.fa.fai'
  bed = 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_annotation/mouse/gencode.vM25.primary_assembly.annotation.bed'
  gtf = 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_annotation/mouse/gencode.vM25.primary_assembly.annotation.ERCC.gtf'
  mt_gtf = 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_annotation/mouse/gencode.vM25.primary_assembly.annotation.mt.gtf'
  rrna_gtf = 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_annotation/mouse/Mouse_mm10_rmsk_rRNA_Refseq_45S_merge.gtf'
  histone_gtf = 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_annotation/mouse/gencode.vM25.primary_assembly.annotation.histone.gtf'
}
