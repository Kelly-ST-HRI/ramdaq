/*
 * -------------------------------------------------
 *  Nextflow config file for running tests
 * -------------------------------------------------
 * Defines bundled input files and everything required
 * to run a fast and simple test. Use as follows:
 *   nextflow run nf-core/ramdaq -profile test,<docker/singularity>
 */

params {
  config_profile_name = 'Test profile'
  config_profile_description = 'Minimal test dataset to check pipeline function'
 
  // Limit resources so that this can run on GitHub Actions
  max_cpus = 2
  max_memory = 6.GB
  max_time = 48.h

  // Input data
  // TODO nf-core: Specify the paths to your test data on nf-core/test-datasets
  // TODO nf-core: Give any required params for the test so that command line flags are not needed
  single_end = false
  stranded = true

  readPaths = [
    ['SRR9694244', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/stranded_PE/SRR9694244_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/stranded_PE/SRR9694244_2.100K.fastq.gz']],
    ['SRR9694245', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/stranded_PE/SRR9694245_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/stranded_PE/SRR9694245_2.100K.fastq.gz']],
    ['SRR9694247', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/stranded_PE/SRR9694247_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/stranded_PE/SRR9694247_2.100K.fastq.gz']],
    ['SRR9694248', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/stranded_PE/SRR9694248_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/stranded_PE/SRR9694248_2.100K.fastq.gz']],
    ['SRR9694262', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/stranded_PE/SRR9694262_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/stranded_PE/SRR9694262_2.100K.fastq.gz']],
    ['SRR9694263', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/stranded_PE/SRR9694263_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/stranded_PE/SRR9694263_2.100K.fastq.gz']],
    ['SRR9694265', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/stranded_PE/SRR9694265_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/stranded_PE/SRR9694265_2.100K.fastq.gz']],
    ['SRR9694266', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/stranded_PE/SRR9694266_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/stranded_PE/SRR9694266_2.100K.fastq.gz']],
  ]
  
  // Genome references
  adapter = 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_annotation/human/all_sequencing_WTA_adopters.fa'
  hisat2_idx = 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_annotation/human/hisat2_v220_index_GRCh38pri_ERCC.tar.gz'
  chrsize = 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_annotation/human/GRCh38.primary_assembly.genome.fa.fai'
  bed = 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_annotation/human/gencode.v35.primary_assembly.annotation.bed'
  gtf = 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_annotation/human/gencode.v35.primary_assembly.annotation.ERCC.gtf'
}
