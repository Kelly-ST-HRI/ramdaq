/*
 * -------------------------------------------------
 *  Nextflow config file for running tests
 * -------------------------------------------------
 * Defines bundled input files and everything required
 * to run a fast and simple test. Use as follows:
 *   nextflow run nf-core/ramdaq -profile test,<docker/singularity>
 */

params {
  config_profile_name = 'Test profile'
  config_profile_description = 'Minimal test dataset to check pipeline function'
 
  // Limit resources so that this can run on GitHub Actions
  max_cpus = 2
  max_memory = 6.GB
  max_time = 48.h

  // Input data
  // TODO nf-core: Specify the paths to your test data on nf-core/test-datasets
  // TODO nf-core: Give any required params for the test so that command line flags are not needed
  single_end = false

  readPaths = [
    ['SRR12594136', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/unstranded_PE/SRR12594136_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/unstranded_PE/SRR12594136_2.100K.fastq.gz']],
    ['SRR12594137', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/unstranded_PE/SRR12594137_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/unstranded_PE/SRR12594137_2.100K.fastq.gz']],
    ['SRR12594142', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/unstranded_PE/SRR12594142_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/unstranded_PE/SRR12594142_2.100K.fastq.gz']],
    ['SRR12594143', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/unstranded_PE/SRR12594143_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/unstranded_PE/SRR12594143_2.100K.fastq.gz']],
    ['SRR12594145', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/unstranded_PE/SRR12594145_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/unstranded_PE/SRR12594145_2.100K.fastq.gz']],
    ['SRR12594146', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/unstranded_PE/SRR12594146_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/unstranded_PE/SRR12594146_2.100K.fastq.gz']],
    ['SRR12594151', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/unstranded_PE/SRR12594151_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/unstranded_PE/SRR12594151_2.100K.fastq.gz']],
    ['SRR12594152', ['https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/unstranded_PE/SRR12594152_1.100K.fastq.gz', 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_test_data/human/unstranded_PE/SRR12594152_2.100K.fastq.gz']],
  ]
  
  // Genome references
  adapter = 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_annotation/human/all_sequencing_WTA_adopters.fa'
  hisat2_idx = 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_annotation/human/hisat2_v220_index_GRCh38pri_ERCC.tar.gz'
  chrsize = 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_annotation/human/GRCh38.primary_assembly.genome.fa.fai'
  bed = 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_annotation/human/gencode.v35.primary_assembly.annotation.bed'
  gtf = 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_annotation/human/gencode.v35.primary_assembly.annotation.ERCC.gtf'
  mt_gtf = 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_annotation/human/gencode.v35.primary_assembly.annotation.mt.gtf'
  rrna_gtf = 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_annotation/human/Human_GRCh38_rmk_rRNA_RefSeq_RNA45S_all.gtf'
  histone_gtf = 'https://bioinformatics.riken.jp/ramdaq_nfcore/ramdaq_annotation/human/gencode.v35.primary_assembly.annotation.histone.gtf'
}
